' Gambas class file

Property idprueba As Integer 
Private hidprueba As Integer

Property idpersona As Integer 
Private hidpersona As Integer

Property textolectura As String 
Private htextolectura As String

Property puntuacion As Integer 
Private hpuntuacion As Integer

Property fecha As Date 
Private hfecha As Date

Property archivosonido As String 
Private harchivosonido As String

Property campo As String[] 
Private hcampo As New String[]

Property campotipo As String[] 
Private hcampotipo As New String[]

Property campovisible As String[] 
Private hcampovisible As New String[]

Private Function idprueba_read() As Integer
  
  Return hidprueba 
  
End 

Private Sub idprueba_write(Valor As Integer)
  
  hidprueba = Valor 
  
End  

Private Function idpersona_read() As Integer
  
  Return hidpersona 
  
End 

Private Sub idpersona_write(Valor As Integer)
  
  hidpersona = Valor 
  
End  

Private Function textolectura_read() As String
  
  Return htextolectura 
  
End 

Private Sub textolectura_write(Valor As String)
  
  htextolectura = Valor 
  
End  

Private Function puntuacion_read() As Integer
  
  Return hpuntuacion 
  
End 

Private Sub puntuacion_write(Valor As Integer)
  
  hpuntuacion = Valor 
  
End  

Private Function fecha_read() As Date
  
  Return hfecha 
  
End 

Private Sub fecha_write(Valor As Date)
  
  hfecha = Valor 
  
End  

Private Function archivosonido_read() As String
  
  Return harchivosonido 
  
End 

Private Sub archivosonido_write(Valor As String)
  
  harchivosonido = Valor 
  
End  

Private Function campo_read() As String[]
  
  Return hcampo 
  
End 

Private Sub campo_write(Valor As String[])
  
  hcampo = Valor 
  
End  

Private Function campotipo_read() As String[]
  
  Return hcampotipo 
  
End 

Private Sub campotipo_write(Valor As String[])
  
  hcampotipo = Valor 
  
End  

Private Function campovisible_read() As String[]
  
  Return hcampovisible 
  
End 

Private Sub campovisible_write(Valor As String[])
  
  hcampovisible = Valor 
  
End  

Public Function Copia(Optional dato As PruebasVO) As PruebasVO

  Dim datoVOtmp As New PruebasVO
  Dim datoVOtmpOriginal As PruebasVO

  If IsNull(dato) Then
    dato = Me 'se copia a si mismo
  Endif
  datoVOtmp.idprueba = dato.idprueba
  datoVOtmp.idpersona = dato.idpersona
  datoVOtmp.textolectura = dato.textolectura
  datoVOtmp.puntuacion = dato.puntuacion
  datoVOtmp.fecha = dato.fecha
  datoVOtmp.archivosonido = dato.archivosonido
  Return datoVOtmp

End

Public Function ConvertirVOaColeccion(dato As PruebasVO) As Collection

  Dim colecciontmp As New Collection
  colecciontmp.add(dato.idprueba, "idprueba")
  colecciontmp.add(dato.idpersona, "idpersona")
  colecciontmp.add(dato.textolectura, "textolectura")
  colecciontmp.add(dato.puntuacion, "puntuacion")
  colecciontmp.add(dato.fecha, "fecha")
  colecciontmp.add(dato.archivosonido, "archivosonido")
  Return colecciontmp

End

Public Function ConvertirColeccionaVO(dato As Collection) As PruebasVO

  Dim datoVOtmp As New PruebasVO
  Try datoVOtmp.idprueba = dato["idprueba"]
  Try datoVOtmp.idpersona = dato["idpersona"]
Try datoVOtmp.textolectura = dato["textolectura"]
Try datoVOtmp.puntuacion = dato["puntuacion"]
Try datoVOtmp.fecha = dato["fecha"]
Try datoVOtmp.archivosonido = dato["archivosonido"]
Return datoVOtmp
End
