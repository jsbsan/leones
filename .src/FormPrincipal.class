' Gambas class file

Public persona As PersonaVO ''persona que proviene de la introduccion de clave
Public ManejadorPersona As New PersonaDAO
Private ManejadorPruebasTmpDato As New PruebasDAO 
Private PruebasTmpDato As PruebasVO

Private ruta_trabajo As String = User.Home & "/.leones" 'importante... ruta donde estan los ficheros de lectura...
Private ultimoobjeto As Label

Public Sub Form_Open()
  
  ModuleComun.copiarLecturas()
  
  Me.Center
  CargaInicialDatos()
  
End

Public Sub CargaInicialDatos()
  
  'carga ficheros 
  cargaficheros()
  
  'carga datos de todos los alumnos -> solo en el caso de que el profesor haya entrado
  '  Debug "Es un tipo de persona:", persona.tipo
  If persona.tipo = "Profesor" Then 
    TabStripVarias[1].Enabled = True
    TabStripVarias[1].Visible = True
    ButtonEstadisticas.visible = False
    CargaAlumnos()
  Else
    'si es un alumno
    ButtonEstadisticas.visible = True
    TabStripVarias[1].Enabled = False
    TabStripVarias[1].Visible = False
  Endif
  'datos
  Me.Title = ("Leones") & ": " & persona.nombre
  
End

Public Sub cargaficheros()
  
  Dim res As Result 'result de las consultas de lecturas realizadas
  Dim VELOCIDAD As String
  
  Dim hboton As Button
  Dim arfile As String[]
  Dim hLabel As Label
  Dim hboxtemp As HBox
  Dim nombrefile As String
  Dim arraybto As New Variant[]
  
  Application.busy = 1
  arfile = Dir(ruta_trabajo, "*", gb.file)  'extraemos los ficheros
  
  ScrollViewDatosFicheros.Children.Clear() 'borrado de todo los controles que hubiensen
  
  hboxtemp = New HBox(ScrollViewDatosFicheros) 
  hboxtemp.h = 25
  hboxtemp.w = ScrollViewDatosFicheros.w - 10
  
  hlabel = New Label(hboxtemp) 
  hlabel.h = 15
  hlabel.expand = True
  hlabel.text = "ficheros"
  hlabel.Alignment = Align.Center
  hlabel.Border = Border.Plain
  hlabel.Background = Color.cyan
  
  hlabel = New Label(hboxtemp) 
  hlabel.h = 15
  hlabel.w = 150
  hlabel.Background = Color.cyan
  hlabel.Alignment = Align.Center
  hlabel.text = ("Puntuación")
  hlabel.Border = Border.Plain
  
  hlabel = New Label(hboxtemp) 
  hlabel.h = 15
  hlabel.w = 150
  hlabel.Background = Color.cyan
  hlabel.Alignment = Align.Center
  hlabel.text = ("Acción")
  hlabel.Border = Border.Plain
  
  For Each nombrefile In arfile.Sort(gb.Ascent)  'los mostramos ordenadamente...
    hboxtemp = New HBox(ScrollViewDatosFicheros) 
    hboxtemp.h = 25
    hboxtemp.w = ScrollViewDatosFicheros.w - 10
    
    hlabel = New Label(hboxtemp) As "GrupoFicheros"
    hlabel.h = 15
    hlabel.expand = True
    
    hlabel.text = nombrefile
    hlabel.Border = Border.Plain
    hlabel.Tooltip = ("haga doble click para seleccionar lectura")
    
    hlabel = New Label(hboxtemp)
    hlabel.h = 15
    hlabel.w = 150
    hlabel.Alignment = Align.Center
    hlabel.Border = Border.Plain
    hlabel.text = "0 p/m" 'dato por defecto...
    VELOCIDAD = hlabel.text 
    
    If persona.tipo = "Profesor" Then 
      'no pongo nada...porque es un profesor
      
    Else
      'tengo que cargar los datos de la lectura si los hubiera..
      'y si no pongo el dato por defecto
      
      ''TODO: ETAPA 2: res = ManejadorPruebasTmpDato.sql() 'buscar pruebas con maxima puntuacion, donde el alumno y la prueba lo tenemos
      res = ManejadorPruebasTmpDato.sql(Subst$("SELECT max(puntuacion) FROM pruebas where textolectura=\"&1\" and idpersona=&2",
        nombrefile, persona.idpersona))
      
      If Not IsNull(res) And If Not IsNull(res[0]) Then 
        ' '   'hay pruebas de ese alumno...
        hlabel.text = Str$(res[0]) & " p/m"
        
      Endif
      ' 
    Endif
    VELOCIDAD = hlabel.text
    
    hboton = New Button(hboxtemp) As "GrupoAccion"
    hboton.h = 15
    hboton.w = 150
    
    If VELOCIDAD = "0 p/m" Then 
      hboton.text = ("Leer") 'si esta hecho seria, "Repetir"
    Else
      hboton.text = ("Repetir") 'si esta hecho seria, "Repetir"
    Endif
    
    hboton.tag = "accion en fichero|" & ruta_trabajo & "/" & nombrefile
    
    'Si es profesor añadir un boton de editar lectura...
    If persona.tipo = "Profesor" Then 
      hboton.w = 75
      
      hboton = New Button(hboxtemp) As "GrupoAccionEditar"
      hboton.h = 15
      hboton.w = 75
      hboton.text = ("Editar")
      hboton.tag = "editar en fichero|" & ruta_trabajo & "/" & nombrefile
      
    Endif
    
  Next  
  Application.busy = 0 
  
End

Public Sub GrupoAccionEditar_Click()
  
  'Message.Info("Editar fichero: " & Last.tag)
  
  FormEditorLecturas.Fichero_lectura = Last.tag
  
  FormEditorLecturas.ShowModal()
  
End

Public Sub GrupoFicheros_DblClick()
  
  If Not IsNull(ultimoobjeto) Then 
    ultimoobjeto.Background = Color.White
    
  Endif
  
  Last.Background = Color.Cyan
  
  ultimoobjeto = Last
  
End

Public Sub GrupoAccion_Click()
  'iniciar prueba...
  
  FormLectura.ficheroNombreLectura = Split(Last.tag, "|")[1]
  Try FormLectura.ficheroTexto = File.Load(FormLectura.ficheroNombreLectura)
  
  If Error Then 
    Message.Info(("Se ha producido un error al intentar leer el fichero de lectura"))
  Else
    FormLectura.PersonaVOtmp = persona
    FormLectura.showmodal()  
    
    cargaficheros() 'recarga informacion
  Endif
  
End

Public Sub ButtonConfigurar_Click()
  
  FormConfigurarTest.ShowDialog()
  
End

Public Sub ButtonEstadisticas_Click()
  
  Dim resultado As Result
  Dim sqlString As String
  Dim PruebasDAOtmp As New PersonaDAO
  
  Select Case Persona.tipo
    Case "Alumno"
      
      sqlString = "Select fecha,puntuacion from Pruebas where" 
      sqlString &= " idpersona=" & persona.idpersona & " " 'alumno que nos pasan de referencia
      sqlString &= " Order by fecha" 'ordenado por fechas
      resultado = PruebasDAOtmp.sql(sqlString)
      
      'Comprobacion si el Alumno no tiene datos de lecturas....
      If resultado.Count = 0 Then 
        Message.Info(("No hay datos para mostrar graficas"))
      Else
        FormEstadistica.PersonaVOtmp = persona
        FormEstadistica.ShowModal()
      Endif
      
    Case "Profesor"
      'si es un profesor mostrar tambien la linea de medias de medias: 5
      ''TODO: Si es profesor mostrar tambien la linea de Medias de Medias
      ''TODO: Si es un profesor el que entra nos tiene que dar tambien el alumno o la clase del que este interesado la nota y medias.
      FormEstadistica.PersonaVOtmp = persona '-> es el profesor...
      FormEstadistica.ShowModal()
  End Select
  
End

Public Sub CargaAlumnos()
  
  Dim resultado As Result
  Dim PersonaDAOTmp As New PersonaDao
  Dim nombre, nivel, clase As String
  Dim hboxtemp As Hbox
  Dim hlabel As Label
  Dim hboton As Button
  
  ScrollViewAlumnos.Children.Clear() 'borrado de todo los controles que hubiesen
  
  resultado = PersonaDAOtmp.sql("Select idpersona,nombre,nivel,clase,tipo from Persona")
  
  While resultado.Available
    
    If resultado["tipo"] = "Alumno" Then 
      hboxtemp = New Hbox(ScrollViewAlumnos)
      hboxtemp.h = 25
      hboxtemp.w = ScrollViewAlumnos.w - 10
      
      nombre = resultado["nombre"]
      '[
      hlabel = New Label(hboxtemp) As "GrupoAlumnos"
      hlabel.h = 15
      hlabel.expand = True
      hlabel.text = nombre
      hlabel.border = border.plain
      ']
      nivel = resultado["nivel"]
      '[
      hlabel = New Label(hboxtemp) As "GrupoAlumnos"
      hlabel.h = 15
      hlabel.expand = True
      hlabel.text = nivel
      hlabel.border = border.plain
      ']
      
      clase = resultado["clase"]
      '[
      hlabel = New Label(hboxtemp) As "GrupoAlumnos"
      hlabel.h = 15
      hlabel.expand = True
      hlabel.text = clase
      hlabel.border = border.plain
      ']
      '
      'boton de borrado de alumnos...
      hboton = New Button(hboxtemp) As "grupoAlumnosBorrarDatos" 
      hboton.h = 15
      hboton.w = 30
      hboton.picture = Picture["icon:/16/delete"]
      hboton.tag = resultado["idpersona"]
      hboton.Tooltip = ("Borrado de datos del alumno y lecturas realizadas")
      '
      hboton = New Button(hboxtemp) ''es un boton para espaciar
      hboton.h = 15
      hboton.w = 30
      '
      hboton = New Button(hboxtemp) As "grupoAlumnosEditarDatos" 
      hboton.h = 15
      hboton.w = 30
      hboton.picture = Picture["icon:/16/edit"]
      hboton.tag = resultado["idpersona"]
      hboton.Tooltip = ("Editar datos del alumno y lecturas realizadas")
      '
      hboton = New Button(hboxtemp) ''es un boton para espaciar
      hboton.h = 15
      hboton.w = 30
      '
      
      '
      'boton exportar dato del alumno..-> convertir datos a json, que luego pueda ser leido por el programa en otra ubicacion.
      '
      hboton = New Button(hboxtemp) As "grupoAlumnosExportarDatos" 'exportar datos
      hboton.h = 15
      hboton.w = 30
      hboton.picture = Picture["exportar1616.png"]
      hboton.tag = resultado["idpersona"]
      hboton.Tooltip = ("Crear fichero con la información del alumno para exportarlo y usarlo en otro lugar")
      '
      hboton = New Button(hboxtemp) ''es un boton para espaciar
      hboton.h = 15
      hboton.w = 30
      
      'boton para estadistica del alumno -> tambien es informe
      hboton = New Button(hboxtemp) As "grupoAlumnosEstadistica" ''TODO: Estadistica del Alumno -> ya incluyen la media de clases y alumnos
      hboton.h = 15
      hboton.w = 30
      hboton.picture = Picture["estadisticas16x16p.png"]
      hboton.tag = resultado["idpersona"]
      hboton.Tooltip = ("Estadistica del Alumno")
      
      ' 'boton para informe 
      ' hboton = New Button(hboxtemp) As "grupoAlumnosInforme" ''TODO: Crear informe
      ' hboton.h = 15
      ' hboton.w = 30
      ' hboton.picture = Picture["Informe16x16.png"]
      ' hboton.tag = resultado["idpersona"]
      ' hboton.Tooltip = ("Crear Informe del alumno")
    Endif
    resultado.movenext
  Wend
  
End

Public Sub grupoAlumnosEditarDatos_Click()
  
  'editar datos de un alumno...
  Dim personaManejadorDato As New PersonaDAO
  
  '   ''Este Tag esta definico como resultado["idpersona"]
  '   
  If comun.EditarAlumno(personaManejadorDato.ConvertirResult(personaManejadorDato.BuscarIgualIdpersona(Last.tag))[0]) Then 
    ''devuelta del formulario, si se ha recibido cambio de alumno, se actualizan los contenedores de datos del usuario actual
    
    CargaInicialDatos()
    
  Endif
  
End

' Public Sub grupoAlumnosInforme_Click()
'   
'   Dim personaManejadorDato As New PersonaDAO
'   ''creo el informe, pasando el tag del ultimo control pulsado.
'   ''Este Tag esta definico como resultado["idpersona"]
'   
'   comun.InformeAlumno(personaManejadorDato.ConvertirResult(personaManejadorDato.BuscarIgualIdpersona(Last.tag))[0])
'   
' End

Public Sub grupoAlumnosEstadistica_Click()
  
  Dim resultado As Result
  Dim sqlString As String
  Dim PruebasDAOtmp As New PersonaDAO
  Dim id As Integer
  Dim personatmp As PersonaVO
  Dim personaManejadorDato As New PersonaDAO
  
  'mostrar grafica del alumno (id del ultimo boton accionado)
  
  id = Last.tag
  
  '  Message.Info("Alumno " & id)
  
  personatmp = personaManejadorDato.ConvertirResult(personaManejadorDato.BuscarIgualIdpersona(id))[0]
  
  sqlString = "Select fecha,puntuacion from Pruebas where" 
  sqlString &= " idpersona=" & id & " " 'alumno que nos pasan de referencia
  sqlString &= " Order by fecha" 'ordenado por fechas
  resultado = PruebasDAOtmp.sql(sqlString)
  
  'Comprobacion si el Alumno no tiene datos de lecturas....
  If resultado.Count = 0 Then 
    Message.Info(("No hay datos para mostrar graficas"))
  Else
    FormEstadistica.PersonaVOtmp = personatmp
    FormEstadistica.ShowModal()
  Endif
  
End

Public Sub ButtonCambiarAlumno_Click()
  
  Dim idactual As Integer
  ''TODO: abrir un formulario para cambio de alumno...
  idactual = persona.idpersona
  FormCambiarAlumno.personaActual = persona
  FormCambiarAlumno.Principal = Me
  FormCambiarAlumno.ShowModal()
  'cuando vuelve hay que actualizar datos...
  '¿se ha cambiado el usuario? Si... entonces recargar la información del usuario....
  
  If persona.idpersona = -999 Or persona.idpersona = idactual Then
    'se cancelo o cerro el formulario, restauro id y no hago nada mas
    persona.idpersona = idactual
    Return 
    
  Endif
  
  ''devuelta del formulario, si se ha recibido cambio de alumno, se actualizan los contenedores de datos del usuario actual
  ''
  CargaInicialDatos()
  
End

Public Sub ButtonAgregar_Click()
  
  Dialog.Title = ("Elege nueva lectura")
  Dialog.Path = User.Home
  
  Dialog.Filter = ["*.palabras", "palabras", "*.sintagmas", "sintagmas", "*.frases", "frases", "*.evaluaciones", "evaluaciones", "*.evaluaciones externas", "evaluaciones externas", "*.txt", "archivos de texto", "*", "todos los archivos"]
  
  If Dialog.OpenFile() Then 
    Return 'el usuario cancelo la eleccion de fichero  
  Endif
  
  'copiar el fichero al directorio de trabajo
  'fichero elegido ->   Dialog.Path
  'recargar las lecturas...
  '
  Copy Dialog.path To ruta_trabajo & "/" & File.Name(Dialog.path)
  
  Wait 0.5 'espera  para terminar de copiar...
  
  cargaficheros()
  
End

Public Sub TabStripVarias_Click()
  
End

Public Sub ButtonDirectorio_Click()
  
  Exec ["pcmanfm", User.Home & "/.leones"]
  
End

Public Sub grupoAlumnosExportarDatos_Click()
  
  'se exportan los datos del alumno elegido..->boton de exportar del alumno en concreto tengo su  ID
  
  'la informacion que me continen el ultimo objeto (boton, last) es el ID del alumno
  If comunExportar.ExportarDatos(Last.tag) Then 
    Message.Info(("Exportados datos correctamente"))
  Endif
  
End

Public Sub ButtonExportar_Click()
  
  'exportar datos de lun alumno
  
End

Public Sub ButtonImportar_Click()
  
  If comunExportar.ImportarDatos() = True Then
    'se debe actualizar los datos del grid...
    CargaAlumnos()
    Message.Info(("Importacion de datos correctamente ejecutada"))
    
  Endif
  
End

Public Sub grupoAlumnosBorrarDatos_Click()
  
  Dim resultado As Result
  Dim msg As Integer
  Dim idpruebaBorrar As Integer
  'borrado de datos del alumno
  
  msg = Message.Question(("¿Esta seguro de borrar los datos del alumno y sus lecturas?"), ("Si, borralo"), ("No, cancelar"))
  
  If msg = 1 Then
    'si seguro que quiero borrar
    ManejadorPersona.BorrarIdpersona(Last.tag)
    resultado = ManejadorPruebasTmpDato.BuscarIgualIdpersona(Last.tag)
    While resultado.Available
      idpruebaBorrar = resultado["idprueba"]
      ManejadorPruebasTmpDato.BorrarIdprueba(idpruebaBorrar)
      resultado.MoveNext
    Wend
    
    'actualizo datos de la regilla
    CargaAlumnos()
  Endif
  
End
