' Gambas class file

'Recibire los datos de la persona para sacar las gráficas....
Public PersonaVOtmp As PersonaVO
Private PersonaDAOtmp As New PersonaDAO
Private PruebasDAOtmp As New PruebasDAO
Private PruebasVotmp As PruebasVO
Private PruebasVotmpLista As PruebasVO[] 'se guardan las pruebas.

Private SinDatos As Boolean = True

Public Sub Form_show()
  
  graficaAlumno()
  
End

' Private Sub ComoDefinirGrafica()
'   
'   Chart.CountDataSets = 1                                                         'How many data sets do you require = 2
'   Chart.Headers.Values = ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"] 'Header values
'   Chart.Title.Text = "Palabras Por Minuto"                                                    'Chart heading
'   
'   'consulta segun boton pulsado...
'   
'   Chart[0].Values = [20, 50, 10, 60, 30]  
'   Chart[0].Text = "Prueba 1"                                        'Chart initial values
'   ' Chart[1].Values = [15, 85, 25, 35, 55]                                          'Chart initial values
'   ' Chart[1].Text = "Prueba 2"
'   
'   Chart.Legend.Visible = True                                                     'Makes the Legend visible
'   Chart.Legend.Title = "Lecturas"                                                     'Title of chart
'   Chart.Type = ChartType.Lines                                                    'Type of chart
'   Chart.BackGround = Color.white                                              'Sets the background colour
'   Chart.Border = True                                                          'Gets rid of the border
'   ADrawingArea1.Refresh                                                            'Refresh the Drawing area
'   
' End

Public Sub ADrawingArea1_Draw()                                                  'Required to draw the chart
  
  Dim siHeight, siWidth As Short                                                  'For Height and Width of the Chart
  
  If SinDatos = False Then
    Me.Close()
    Return
  Endif
  
  siHeight = ADrawingArea1.Height - 5                                             'Set the value to 10 less than the DrawingArea Height
  siWidth = ADrawingArea1.Width - 5                                               'Set the value to 10 less than the DrawingArea Width
  If siHeight < 5 Then siHeight = 5                                             'Make sure the value is not too small
  If siWidth < 5 Then siWidth = 5                                               'Make sure the value is not too small
  
  Chart.Height = siHeight                                                         'Set the Chart Height
  Chart.Width = siWidth                                                           'Set the Chart Width
  Chart.Draw                                                                      'Draw the chart
  
End

Public Sub ButtonSalir_Click()
  
  Me.Close()
  
End

Public Sub ButtonRedibujar_Click()
  
  graficaAlumno()
  
End

Public Function repiteValores(v As Integer, veces As Integer) As Integer[]
  
  Dim lista As New Integer[]
  Dim a As Integer
  
  For a = 0 To veces - 1
    lista.Add(v)
  Next
  
  Return lista
  
End

Public Sub graficaAlumno()
  
  Dim resultado As Result
  
  Dim sqlString As String
  Dim velocidad As Integer
  Dim SumaVelocidad As Integer
  Dim media As Integer
  Dim i, minimo, maximo As Integer
  
  'filtro: Por persona
  'PersonaVOtmp.idpersona
  Print "El nivel es: "; PersonaVOtmp.nivel
  
  sqlString = "Select fecha,puntuacion from Pruebas where" 
  sqlString &= " idpersona=" & PersonaVOtmp.idpersona & " " 'alumno que nos pasan de referencia
  sqlString &= " Order by fecha" 'ordenado por fechas
  resultado = PruebasDAOtmp.sql(sqlString)
  'con esto consigo un listado fecha y puntuacion
  
  Select Case PersonaVOtmp.tipo
    Case "Alumno"
      'si es una alumno solo mostrar 4 lineas de datos
      chart.CountDataSets = 4 
    Case "Profesor"
      'si es un profesor mostrar tambien la linea de medias de medias: 5
      ''TODO: Si es profesor mostrar tambien la linea de Medias de Medias
      ''TODO: Si es un profesor el que entra nos tiene que dar tambien el alumno o la clase del que este interesado la nota y medias.
      chart.CountDataSets = 5       
  End Select
  
  chart.Title.Text = ("Palabras Por Minuto") 'Chart heading
  'reinicio la velocidad
  SumaVelocidad = 0
  
  chart.Headers.Values.Clear()
  chart[0].Values.Clear()
  
  While resultado.Available
    chart.Headers.Values.Add(Format(resultado["fecha"], "dd/mm"))
    velocidad = resultado["puntuacion"]
    SumaVelocidad += velocidad
    chart[0].Values.Add(velocidad)
    resultado.MoveNext
    Chart[0].Text = "Lecturas"
  Wend
  
  media = SumaVelocidad / resultado.Max
  
  'If CheckBoxMediaAlumno.Value Then 
  chart[1].Values.Clear()
  For i = 0 To resultado.Count
    chart[1].Values.Add(media)
  Next 
  Chart[1].Text = "Media (" & PersonaVOtmp.nombre & ")"
  ' Endif
  
  ' If CheckBoxMaxMin.Value Then 
  chart[2].Values.Clear()
  maximo = comun.ValorMaximoCurso(PersonaVOtmp.nivel)
  For i = 0 To resultado.Count
    chart[2].Values.Add(maximo)
  Next
  Chart[2].Text = "Maximo " & PersonaVOtmp.nivel
  
  minimo = comun.ValorMinimoCurso(PersonaVOtmp.nivel)    
  chart[3].Values.Clear()
  For i = 0 To resultado.Count
    chart[3].Values.Add(minimo)
  Next
  Chart[3].Text = "Minimo " & PersonaVOtmp.nivel
  
  'Si es un Profesor....
  If chart.CountDataSets = 5 Then 
    'dibujar Medias de Medias
    
    chart[4].Values.Clear()
    For i = 0 To resultado.Count
      chart[4].Values.Add(SerieMediadeMedia())
    Next 
    
    Chart[4].Text = ("Media de Clase") & " " & PersonaVOtmp.nivel & " " & PersonaVOtmp.clase
    
  Endif
  
  chart.XAxe.Font = Font["5"]
  chart.YAxe.FONT = Font["5"]
  
  Chart.Legend.Visible = True                                                     'Makes the Legend visible
  Chart.Legend.Title = ("Lecturas")                                                     'Title of chart
  chart.Type = ChartType.Lines                                                    'Type of chart
  chart.BackGround = Color.white                                              'Sets the background colour
  chart.Border = True                                                          'Gets rid of the border
  ADrawingArea1.Refresh                                                            'Refresh the Drawing area
  
End

Public Sub SerieMediadeMedia() As Float
  
  Dim nivel, clase, sqlString As String
  Dim resultado2, resultado As Result
  Dim TotalMedia, sumamedia, SumaAlumno, SumaVelocidad, media As Integer
  
  '* definir MEDIA de MEDIA  de los alumnos de la misma clase. *'
  'solo para profesor
  'obtener el nivel/clase del alumno dado
  nivel = PersonaVOtmp.nivel
  clase = PersonaVOtmp.clase
  
  'obtener toda los id de cada alumo de ese nivelclase
  sqlString = "Select idpersona from Persona where" 
  sqlString &= " nivel=" & PersonaVOtmp.nivel & " " 
  sqlString &= " and clase=" & PersonaVOtmp.clase  
  resultado = PruebasDAOtmp.sql(sqlString)
  
  'por cada alumno sacar la media:
  SumaMedia = 0
  SumaAlumno = 0
  
  While resultado.Available 'lista de alumnos
    'subconsulta: obtener media del alumno
    
    sqlString = "Select puntuacion from Pruebas where" 
    sqlString &= " idpersona=" & resultado["idpersona"] 
    resultado2 = PruebasDAOtmp.sql(sqlString)
    SumaVelocidad = 0
    media = 0
    While resultado2.Available
      '    obtener lecturas y puntuaciones
      
      SumaVelocidad += resultado2["puntuacion"]
      resultado2.MoveNext
    Wend
    If resultado2.Max <> 0 Then 
      'Formula Media: Sumatorio de puntuacion dividido entre numero de pruebas.
      
      media = SumaVelocidad / resultado2.Max
    Else
      media = 0
    Endif
    
    If media = 0 Then 
      'si la media es 0, es que no tienen pruebas hechas, y no se contabiliza 
    Else
      'La media se suma al se suma al total de media, y el numero de alumnosmedia se incrementa
      
      SumaMedia += media
      SumaAlumno += 1
    Endif
    
    resultado.MoveNext
  Wend
  'La media de las medias es el total de medias por el numero de alumnosmedia
  TotalMedia = SumaMedia / SumaAlumno
  
  Return TotalMedia
  
End

' Public Function ValorMaximoCurso(curso As String) As Integer
'   
'   Select Case Curso
'     Case "Primaria 1º"
'       Return 59
'     Case "Primaria 2º"
'       Return 84
'     Case "Primaria 3º"
'       Return 99
'     Case "Primaria 4º"
'       Return 114
'     Case "Primaria 5º"
'       Return 124
'     Case "Primaria 6º"
'       Return 134
'     Case "Secundaria 1º"
'       Return 144
'     Case "Secundaria 2º"
'       Return 154
'     Case "Secundaria 3º"
'       Return 160
'   End Select
'   
' End
' 
' Public Function ValorMinimoCurso(curso As String) As Integer
'   
'   Select Case Curso
'     Case "Primaria 1º"
'       Return 35
'     Case "Primaria 2º"
'       Return 60
'     Case "Primaria 3º"
'       Return 85
'     Case "Primaria 4º"
'       Return 100
'     Case "Primaria 5º"
'       Return 115
'     Case "Primaria 6º"
'       Return 125
'     Case "Secundaria 1º"
'       Return 135
'     Case "Secundaria 2º"
'       Return 145
'     Case "Secundaria 3º"
'       Return 155
'   End Select
'   
' End

Public Sub Form_Open()
  
End

Public Sub ButtonInformes_Click()
  
  Dim pc As Picture
  
  pc = Desktop.Screenshot(ADrawingArea1.ScreenX, ADrawingArea1.ScreenY, ADrawingArea1.Width, ADrawingArea1.height)
  pc.Save("/tmp/imagen.png", 100)
  
  comun.InformeAlumno(PersonaVOtmp, "/tmp/imagen.png")
  
End
